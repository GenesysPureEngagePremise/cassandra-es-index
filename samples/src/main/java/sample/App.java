/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package sample;

import com.datastax.oss.driver.api.core.CqlSession;
import com.datastax.oss.driver.api.querybuilder.SchemaBuilder;
import com.datastax.oss.driver.api.querybuilder.schema.CreateKeyspace;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import java.net.InetSocketAddress;

public class App {

  private Logger logger = LoggerFactory.getLogger(App.class);

  public static void main(String[] args) {
    try {
      new App().connect();
    } catch (Exception e) {
      e.printStackTrace();
    }
  }

  public synchronized Boolean connect() {
    logger.info("connecting to cassandra");

    CqlSession session = CqlSession.builder()
      .addContactPoint(new InetSocketAddress("localhost", 9041))
      .withLocalDatacenter("datacenter1")
      .build();

    try {
      logger.info("connected");
      CreateKeyspace createKs = SchemaBuilder.createKeyspace("genesys").ifNotExists().withSimpleStrategy(1);
      session.execute(createKs.build());

      logger.info("creating table");
      session.execute("CREATE TABLE genesys.emails (\n"
        + "   id UUID PRIMARY KEY,\n"
        + "   subject text,\n"
        + "   body text,\n"
        + "   userid int,\n"
        + "   query text\n"
        + ");");

      logger.info("table created");
      logger.info("creating index");
      session.execute("CREATE CUSTOM INDEX ON genesys.emails(query)\n"
        + "USING 'com.genesyslab.webme.commons.index.EsSecondaryIndex'\n"
        + "WITH OPTIONS = {'unicast-hosts': 'elasticsearchSample:9200'};");
      logger.info("closing connection");
    } catch (Exception e) {
      session.close();
      logger.warn("Something went wrong", e);
      return false;
    }
    logger.info("all done");

    return true;
  }
}
